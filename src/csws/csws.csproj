<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net5.0-windows</TargetFramework>
    <UseWPF>true</UseWPF>
    <AssemblyName>csws</AssemblyName>
    <RootNamespace>CSScripting</RootNamespace>
    <StartupObject />
    <Version>2.0.0.0</Version>
    <Authors>Oleg Shilo</Authors>
    <Product>CS-Script</Product>
    <Copyright>(C) 2004-2021 Oleg Shilo</Copyright>
    <Description>C# Script engine .NET Core executable</Description>
    <PackageLicenseUrl></PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/oleg-shilo/cs-script.core</PackageProjectUrl>
    <PackageIconUrl></PackageIconUrl>
    <RepositoryUrl>https://github.com/oleg-shilo/cs-script.core</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>C# script dynamic</PackageTags>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <FileVersion>2.0.0.0</FileVersion>
    <PackageReleaseNotes>CLI
- New commands:
	- `-server` - for managing build server 
	- `-vscode` - to open script in VSCode
	- `-vs` - to script project in Visual Studio
	- `-self-test` - for testing the engine on the target system
	- `-self-exe` - for building css launcher for manual deployment
	- `-engine:&lt;csc|dotnet&gt;`
	- `-new:toplevel` - CLI parameter
	- `-profile` - for testing script loading performance
	- `-speed` - for compiler performance testing
- Added css 
- Added creation of `code.header` on first use of CLI command `-code`
- Added complex (multi-file) commands support (e.g. css -self-test-run)
- Implemented build server
- Implemented hot-loading for csc engine.
- Normalized all \n and \r\n CLI output by using Environment.NewLine
- Added reporting using of incompatible csc compiler for scripts requiring XAML compilation  

CSScriptLib
- Implemented //css_winapp for WinForm and WPF applications
- Added //css_engine (//css_ng) directive for choosing the compiling engine
- Completed CSScript.Evaluator.CodeDom interface.
- Implemented transparent hosting of CSScriptLib in .NET-Framework and .NET-Core
- Removed dependency on Roslyn for pure CodeDom evaluator use-case
- added sample with downloading the latest C# compiler
- added passing compiler options
- Implemented probing for default C#5 compiler when hosted on .NET Framework.
- Extending u-testing to cover new Evaluator features (CSScriptLib.dll)</PackageReleaseNotes>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <ApplicationIcon>css_logo.ico</ApplicationIcon>
    <PackageIcon>..\logo\css_logo.png</PackageIcon>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>TRACE;TRACE, WIN_APP</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DefineConstants>TRACE;TRACE, WIN_APP</DefineConstants>
  </PropertyGroup>
  <Target Name="PostBuild" AfterTargets="PostBuildEvent">
    <Exec Command="copy &quot;$(TargetPath)&quot; &quot;$(ProjectDir)..\css\bin\$(ConfigurationName)\$(TargetName).dll&#xD;&#xA;copy &quot;$(TargetDir)csws.exe&quot; &quot;$(ProjectDir)..\css\bin\$(ConfigurationName)\$(TargetName).exe&#xD;&#xA;copy &quot;$(TargetDir)csws.runtimeconfig.json&quot; &quot;$(ProjectDir)..\css\bin\$(ConfigurationName)\csws.runtimeconfig.json&quot;&#xD;&#xA;" />
  </Target>
  <ItemGroup>
    <Compile Include="..\cscs\AssemblyExecutor.cs" Link="AssemblyExecutor.cs" />
    <Compile Include="..\cscs\AssemblyResolver.cs" Link="AssemblyResolver.cs" />
    <Compile Include="..\cscs\BuildServer.cs" Link="BuildServer.cs" />
    <Compile Include="..\cscs\CSExecutionClient.cs" Link="CSExecutionClient.cs" />
    <Compile Include="..\cscs\csparser.cs" Link="csparser.cs" />
    <Compile Include="..\cscs\csscript.cli.cs" Link="\csscript.cli.cs" />
    <Compile Include="..\cscs\csscript.cs" Link="csscript.cs" />
    <Compile Include="..\cscs\dbg.cs" Link="dbg.cs" />
    <Compile Include="..\cscs\dbg.res.cs" Link="dbg.res.cs" />
    <Compile Include="..\cscs\Exceptions.cs" Link="Exceptions.cs" />
    <Compile Include="..\cscs\ExecuteOptions.cs" Link="ExecuteOptions.cs" />
    <Compile Include="..\cscs\fileparser.cs" Link="fileparser.cs" />
    <Compile Include="..\cscs\GACHelper.cs" Link="GACHelper.cs" />
    <Compile Include="..\cscs\HelpProvider.cs" Link="HelpProvider.cs" />
    <Compile Include="..\cscs\Models\CompilingInfo.cs" Link="Models\CompilingInfo.cs" />
    <Compile Include="..\cscs\Models\Interfaces.cs" Link="Models\Interfaces.cs" />
    <Compile Include="..\cscs\NuGet.Core.cs" Link="NuGet.Core.cs" />
    <Compile Include="..\cscs\Precompiler.cs" Link="Precompiler.cs" />
    <Compile Include="..\cscs\Program.cs" Link="Program.cs" />
    <Compile Include="..\cscs\Project.cs" Link="Project.cs" />
    <Compile Include="..\cscs\CodeDom\Proxies.cs" Link="Proxies.cs" />
    <Compile Include="..\cscs\CodeDom\CompilerResults.cs" Link="CompilerResults.cs" />
    <Compile Include="..\cscs\CodeDom\CompilerError.cs" Link="CompilerError.cs" />
    <Compile Include="..\cscs\ScriptParser.cs" Link="ScriptParser.cs" />
    <Compile Include="..\cscs\ScriptParsingResult.cs" Link="ScriptParsingResult.cs" />
    <None Include="..\cscs\Services.Roslyn.cs" Link="Services.Roslyn.cs" />
    <Compile Include="..\cscs\Settings.cs" Link="Settings.cs" />
    <Compile Include="..\cscs\Utils\CLIExtensions.cs" Link="Utils\CLIExtensions.cs" />
    <Compile Include="..\cscs\Utils\ConsoleExtensions.cs" Link="Utils\ConsoleExtensions.cs" />
    <Compile Include="..\cscs\Utils\CoreExtensions.cs" Link="Utils\CoreExtensions.cs" />
    <Compile Include="..\cscs\Utils\CurrentDirGuard.cs" Link="Utils\CurrentDirGuard.cs" />
    <Compile Include="..\cscs\Utils\LinqExtensions.cs" Link="Utils\LinqExtensions.cs" />
    <Compile Include="..\cscs\Utils\PathExtensions.cs" Link="Utils\PathExtensions.cs" />
    <Compile Include="..\cscs\Utils\Globals.cs" Link="Utils\Globals.cs" />
    <Compile Include="..\cscs\Utils\Profiler.cs" Link="Utils\Profiler.cs" />
    <Compile Include="..\cscs\Utils\ReflectionExtensions.cs" Link="Utils\ReflectionExtensions.cs" />
    <Compile Include="..\cscs\Utils\Runtime.cs" Link="Utils\Runtime.cs" />
    <Compile Include="..\cscs\Utils\SerializationExtensions.cs" Link="Utils\SerializationExtensions.cs" />
    <Compile Include="..\cscs\Utils\SimpleAsmProbing.cs" Link="SimpleAsmProbing.cs" />
    <Compile Include="..\cscs\Utils\SocketExtensions.cs" Link="Utils\SocketExtensions.cs" />
    <Compile Include="..\cscs\Utils\StringExtensions.cs" Link="Utils\StringExtensions.cs" />
    <Compile Include="..\cscs\Utils\SystemWideLock.cs" Link="Utils\SystemWideLock.cs" />
    <Compile Include="..\cscs\Utils\Utils.cs" Link="Utils\Utils.cs" />
    <Compile Include="..\cscs\Utils\WildCardExtensions.cs" Link="Utils\WildCardExtensions.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\logo\css_logo.png">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      <CustomToolNamespace>CSScripting</CustomToolNamespace>
    </EmbeddedResource>
  </ItemGroup>
</Project>